{
    "name": "CyrusLang",
    "fileTypes": ["cyrus"],
    "scopeName": "source.cyrus",
    "patterns": [
        {
            "name": "keyword.control.cyrus",
            "match": "\\b(if|else|for|match|pub|inline|extern|impl|ret|throw|return|break)\\b"
        },
        {
            "name": "keyword.declaration.cyrus",
            "match": "\\b(fn|struct|package|imoprt)\\b"
        },
        {
            "name": "storage.type.cyrus",
            "match": "\\b(i32|i64|u32|u64|usize|f32|f64|string|char|bool|range)\\b"
        },
        {
            "name": "variable.language.cyrus",
            "match": "#[a-zA-Z_][a-zA-Z0-9_]*"
        },
        {
            "name": "constant.language.cyrus",
            "match": "\\b(true|false|nil)\\b"
        },
        {
            "name": "constant.numeric.cyrus",
            "match": "\\b\\d+(\\.\\d+)?\\b"
        },
        {
            "name": "string.quoted.double.cyrus",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.cyrus",
                    "match": "\\\\."
                }
            ]
        },
        {
            "name": "string.quoted.single.cyrus",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.cyrus",
                    "match": "\\\\."
                }
            ]
        },
        {
            "name": "comment.line.double-slash.cyrus",
            "begin": "//",
            "end": "$"
        },
        {
            "name": "comment.block.cyrus",
            "begin": "/\\*",
            "end": "\\*/"
        },
        {
            "name": "entity.name.type.struct.cyrus",
            "match": "\\bstruct\\s+[A-Z][a-zA-Z0-9_]*\\b"
        },
        {
            "name": "entity.name.function.cyrus",
            "match": "\\bfn\\s+[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        {
            "name": "punctuation.definition.variable.cyrus",
            "match": "#"
        },
        {
            "name": "punctuation.definition.range.cyrus",
            "match": "\\.\\."
        },
        {
            "name": "punctuation.separator.key-value.cyrus",
            "match": ":"
        },
        {
            "name": "punctuation.section.block.begin.cyrus",
            "match": "\\{"
        },
        {
            "name": "punctuation.section.block.end.cyrus",
            "match": "\\}"
        },
        {
            "name": "punctuation.section.array.begin.cyrus",
            "match": "\\["
        },
        {
            "name": "punctuation.section.array.end.cyrus",
            "match": "\\]"
        }
    ],
    "repository": {
        "variables": {
            "patterns": [
                {
                    "name": "variable.other.cyrus",
                    "match": "#[a-zA-Z_][a-zA-Z0-9_]*"
                }
            ]
        }
    }
}
